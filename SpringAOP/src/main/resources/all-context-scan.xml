<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	<context:annotation-config />
	<context:component-scan
		base-package="ru.javabegin.training.spring.aop" />
	<aop:aspectj-autoproxy proxy-target-class="true"/>
<!-- 	<aop:config>
	<aop:aspect id="log" ref="myLogger">
			<aop:pointcut
				expression="execution(* ru.javabegin.training.spring.aop.objects.FileManager.*(..))"
				id="getValue" />
			<aop:before method="init" pointcut-ref="getValue" />
			<aop:after method="close" pointcut-ref="getValue" />
			<aop:after-returning method="printValue"
				pointcut-ref="getValue" returning="obj" />
			<aop:after-throwing method="checkExeption" pointcut-ref="getValue" throwing="e"/>
		</aop:aspect>
		<aop:aspect id  = "publicLog" ref = "myLogger">
			<aop:around pointcut="execution(public * *(..))" method  = "watchTime"/>
		</aop:aspect>
	</aop:config> -->
	
</beans>
